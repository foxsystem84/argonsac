---
import VideoModal from "./VideoModal.astro";
import ButtonVideo from "./ButtonVideo.astro";
import { Icon } from "astro-icon/components";

interface Slide {
  url: string;
  title: string;
  subtitle?: string;
  images?: { image1?: string; image2?: string }[];
}

interface Props {
  slides: Slide[];
}

const { slides } = Astro.props;
---

<div class="relative h-[600px] md:h-screen w-full overflow-hidden">
  <!-- Slider -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="relative h-full w-full">
      <div
        id="slider"
        class="h-full flex absolute inset-0 transition-opacity duration-1000"
      >
        <!-- Slide 1 -->
        {
          slides.map((slide) => (
            <div
              class=" absolute  inset-0 opacity-0 transition-opacity duration-1000 "
              style={`background-image: url(${slide.url}); background-size: cover; background-position: center;`}
            >
              <div class="slide z-0 absolute  inset-0 flex flex-col justify-center slides-star pl-0 md:pl-16  xl:pl-24 2xl:pl-48 text-white w-full md:w-4/6 space-y-6">
                <h1 class="text-4xl text-wrap font-exo leading-tight uppercase px-2 md:px-0 xl:text-[48px]  2xl:text-[68px] text-center md:text-left font-bold ">
                  {slide.title}
                </h1>
                <p class="text-xl text-wrap font-exo leading-normal font-semibold  uppercase px-2 md:px-0 text-center md:text-left md:text-2xl">
                  {slide.subtitle
                    ? slide.subtitle.split("\n").map((line) => (
                        <span>
                          {line}
                          <br />
                        </span>
                      ))
                    : null}
                </p>
                {slide.images && slide.images?.length > 0 && (
                  <div class="flex justify-center md:justify-start mt-2 space-x-2">
                    <img
                      src={slide.images[0].image1}
                      alt="Certificación BPA"
                      class=" w-24 h-24 object-contain"
                    />
                    <img
                      src={slide.images[0].image2}
                      alt="Certificación BPDT"
                      class="w-24 h-24 object-contain"
                    />
                  </div>
                )}
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>

  <div class="absolute bottom-8 w-full flex justify-center gap-4">
    <button
      id="prevButton"
      aria-label="Anterior"
      class="bg-black bg-opacity-50 hover:bg-opacity-80 text-white rounded-full p-4 transition-all duration-300"
    >
      <Icon name="arrow-prev" class="h-6 w-6" />
    </button>
    <button
      id="nextButton"
      aria-label="Siguiente"
      class="bg-black bg-opacity-50 hover:bg-opacity-80 text-white rounded-full p-4 transition-all duration-300"
    >
      <Icon name="arrow-next" class="h-6 w-6" />
    </button>
  </div>
  <div
    class="absolute top-1/2 left-1/2 right-0 translate-x-1/2 -translate-y-1/2"
  >
    <div class="relative hidden md:flex">
      <ButtonVideo />
      <span
        class="animate-ping absolute top-0 h-24 w-24 rounded-full bg-black/50"
      ></span>
    </div>
  </div>

  <VideoModal />
</div>

<style>
  .slide {
    --slide-transform: translateY(20px);
  }

  .slide.opacity-0 h1,
  .slide.opacity-0 p {
    transform: var(--slide-transform);
    opacity: 0;
  }

  .slide.opacity-100 h1,
  .slide.opacity-100 p {
    transform: translateY(0);
    opacity: 1;
  }

  .slide h1,
  .slide p {
    transition:
      transform 0.5s ease-out,
      opacity 0.5s ease-out;
  }

  .slide h1 {
    transition-delay: 0.2s;
  }

  .slide p {
    transition-delay: 0.4s;
  }
</style>
<script>
  let currentIndex = 0;
  const slides = document.querySelectorAll<HTMLElement>("#slider > div");
  const totalSlides = slides.length;

  function showSlide(index: number) {
    slides.forEach((slide, i) => {
      if (i === index) {
        slide.style.opacity = "1";
        slide.style.pointerEvents = "none";
      } else {
        slide.style.opacity = "0";
        slide.style.pointerEvents = "auto";
      }
    });
  }

  function nextSlide() {
    currentIndex = (currentIndex + 1) % totalSlides;
    showSlide(currentIndex);
  }

  function prevSlide() {
    currentIndex = (currentIndex - 1 + totalSlides) % totalSlides;
    showSlide(currentIndex);
  }

  document.getElementById("nextButton")?.addEventListener("click", nextSlide);
  document.getElementById("prevButton")?.addEventListener("click", prevSlide);

  setInterval(nextSlide, 10000);

  // Initialize first slide
  showSlide(currentIndex);
</script>
